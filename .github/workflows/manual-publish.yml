name: Manual Store Publish

on:
  workflow_dispatch:
    inputs:
      target:
        description: "Target store to publish to"
        required: true
        type: choice
        options:
          - chrome
          - firefox
          - both
      version:
        description: "Version number (e.g., 1.0.0)"
        required: true
        type: string

jobs:
  publish-chrome:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.target == 'chrome' || github.event.inputs.target == 'both' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Chrome extension
        run: npm run build

      - name: Update manifest version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          jq --arg version "$VERSION" '.version = $version' dist/chrome/manifest.json > dist/chrome/manifest.tmp.json
          mv dist/chrome/manifest.tmp.json dist/chrome/manifest.json

      - name: Package Chrome extension
        run: |
          cd dist/chrome
          zip -r ../../chrome-extension-v${{ github.event.inputs.version }}.zip .
          cd ../..

      - name: Upload Chrome artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension-v${{ github.event.inputs.version }}
          path: chrome-extension-v${{ github.event.inputs.version }}.zip
          retention-days: 30

      # Uncomment and configure when you have Chrome Web Store credentials
      # - name: Publish to Chrome Web Store
      #   uses: mnao305/chrome-extension-upload@v5.0.0
      #   with:
      #     file-path: chrome-extension-v${{ github.event.inputs.version }}.zip
      #     extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
      #     client-id: ${{ secrets.CHROME_CLIENT_ID }}
      #     client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
      #     refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}

  publish-firefox:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.target == 'firefox' || github.event.inputs.target == 'both' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Firefox extension
        run: npm run build

      - name: Update manifest version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          jq --arg version "$VERSION" '.version = $version' dist/firefox/manifest.json > dist/firefox/manifest.tmp.json
          mv dist/firefox/manifest.tmp.json dist/firefox/manifest.json

      - name: Package Firefox extension
        run: |
          cd dist/firefox
          zip -r ../../firefox-extension-v${{ github.event.inputs.version }}.zip .
          cd ../..

      - name: Upload Firefox artifact
        uses: actions/upload-artifact@v4
        with:
          name: firefox-extension-v${{ github.event.inputs.version }}
          path: firefox-extension-v${{ github.event.inputs.version }}.zip
          retention-days: 30

      # Uncomment and configure when you have Firefox Add-ons credentials
      # - name: Publish to Firefox Add-ons
      #   uses: firefox-actions/web-ext@v1
      #   with:
      #     cmd: sign
      #     source: dist/firefox
      #     channel: listed
      #     apiKey: ${{ secrets.FIREFOX_API_KEY }}
      #     apiSecret: ${{ secrets.FIREFOX_API_SECRET }}
